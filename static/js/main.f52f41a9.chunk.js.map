{"version":3,"sources":["EditableFormItem.tsx","EditableUsersTable.tsx","EditableTableForm.tsx","App.tsx","index.tsx"],"names":["EditableFormItem","props","editing","rest","Item","children","Dummy","style","paddingLeft","value","Column","Table","EditableUsersTable","users","form","add","remove","useState","undefined","editingIndex","setEditingIndex","isNewUser","setNewUser","addUser","length","onSave","validateFields","then","catch","error","console","log","errorFields","dataSource","pagination","footer","onClick","PlusOutlined","dataIndex","title","width","render","row","index","name","className","placeholder","min","max","rules","required","message","icon","SaveOutlined","shape","type","marginRight","CloseOutlined","resetFields","onCancel","EditOutlined","disabled","okText","cancelText","onConfirm","MinusOutlined","mockData","userlistName","age","EditableTableForm","data","setData","useForm","onFinish","values","notification","success","description","JSON","stringify","initialValues","label","List","info","ReloadOutlined","htmlType","marginLeft","App","extra","href","data-size","data-show-count","aria-label","GithubOutlined","paddingTop","marginTop","document","getElementById"],"mappings":"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","file":"static/js/main.f52f41a9.chunk.js","sourcesContent":["import * as React from \"react\";\nimport { Form } from \"antd\";\nimport { FormItemProps } from \"antd/lib/form\";\n\ninterface EditableFormItemProps extends FormItemProps {\n  readonly editing: boolean;\n}\n\nexport const EditableFormItem: React.FC<EditableFormItemProps> = props => {\n  const { editing, ...rest } = props;\n  return (\n    <Form.Item {...rest}>{editing ? props.children : <Dummy />}</Form.Item>\n  );\n};\n\ninterface DummyProps {\n  readonly value?: any;\n}\n\nconst Dummy: React.FC<DummyProps> = props => (\n  <div style={{ paddingLeft: 12 }}>{props.value}</div>\n);","import {\n  CloseOutlined,\n  EditOutlined,\n  MinusOutlined,\n  PlusOutlined,\n  SaveOutlined\n} from \"@ant-design/icons\";\nimport { Button, Input, InputNumber, Popconfirm, Table } from \"antd\";\nimport { FormInstance } from \"antd/lib/form/util\";\nimport { FieldData } from \"rc-field-form/lib/interface\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { EditableFormItem } from \"./EditableFormItem\";\n\nconst { Column } = Table;\n\ninterface User {\n  name: string;\n  age: number;\n}\n\ninterface EditableUsersTableProps {\n  readonly users: FieldData[];\n  readonly form: FormInstance;\n  readonly add: () => void;\n  readonly remove: (index: number) => void;\n}\n\nexport const EditableUsersTable: React.FC<EditableUsersTableProps> = props => {\n  const { users, form, add, remove } = props;\n  const [editingIndex, setEditingIndex] = useState<number | undefined>(\n    undefined\n  );\n  const [isNewUser, setNewUser] = useState<boolean>(false);\n\n  const addUser = () => {\n    add();\n    setEditingIndex(users.length);\n    setNewUser(true);\n  };\n\n  const onSave = () => {\n    form\n      .validateFields()\n      .then(() => {\n        setNewUser(false);\n        setEditingIndex(undefined);\n      })\n      .catch(error => {\n        console.log(error.errorFields);\n      });\n  };\n\n  const onCancel = (index: number) => {\n    if (isNewUser) {\n      remove(index);\n    } else {\n      form.resetFields([[\"users\", index, \"age\"], [\"users\", index, \"name\"]]);\n    }\n\n    setNewUser(false);\n    setEditingIndex(undefined);\n  };\n\n  return (\n    <Table\n      dataSource={users}\n      pagination={false}\n      footer={() => (\n        <Button onClick={addUser}>\n          <PlusOutlined /> Add User\n        </Button>\n      )}\n    >\n      <Column\n        dataIndex={\"age\"}\n        title={\"Age\"}\n        width={125}\n        render={(value, row, index) => {\n          return (\n            <EditableFormItem\n              name={[index, \"age\"]}\n              editing={index === editingIndex}\n              className={\"ant-form-item-no-bottom-margin\"}\n            >\n              <InputNumber placeholder=\"age\" min={0} max={150} />\n            </EditableFormItem>\n          );\n        }}\n      />\n      <Column\n        dataIndex={\"name\"}\n        title={\"Name\"}\n        width={200}\n        render={(value, row, index) => {\n          return (\n            <EditableFormItem\n              rules={[{ required: true, message: \"Name is required\" }]}\n              name={[index, \"name\"]}\n              editing={index === editingIndex}\n              className={\"ant-form-item-no-bottom-margin\"}\n            >\n              <Input placeholder=\"name\" />\n            </EditableFormItem>\n          );\n        }}\n      />\n      <Column\n        title={\"Action\"}\n        render={(value, row, index) => {\n          if (index === editingIndex) {\n            return (\n              <React.Fragment>\n                <Button\n                  icon={<SaveOutlined />}\n                  shape={\"circle\"}\n                  type={\"primary\"}\n                  style={{ marginRight: 8 }}\n                  onClick={onSave}\n                />\n                <Button\n                  icon={<CloseOutlined />}\n                  shape={\"circle\"}\n                  onClick={() => onCancel(index)}\n                />\n              </React.Fragment>\n            );\n          } else {\n            return (\n              <React.Fragment>\n                <Button\n                  icon={<EditOutlined />}\n                  shape={\"circle\"}\n                  style={{ marginRight: 8 }}\n                  disabled={editingIndex !== undefined}\n                  onClick={() => setEditingIndex(index)}\n                />\n                <Popconfirm\n                  title=\"Are you sureï¼Ÿ\"\n                  okText=\"Yes\"\n                  cancelText=\"No\"\n                  onConfirm={() => remove(index)}\n                >\n                  <Button\n                    icon={<MinusOutlined />}\n                    shape={\"circle\"}\n                    type={\"danger\"}\n                    disabled={editingIndex !== undefined}\n                  />\n                </Popconfirm>\n              </React.Fragment>\n            );\n          }\n        }}\n      />\n    </Table>\n  );\n};\n","import * as React from \"react\";\nimport { Form, Input, Button, notification, Row } from \"antd\";\nimport { EditableUsersTable } from \"./EditableUsersTable\";\nimport { useForm } from \"antd/lib/form/util\";\nimport { useState } from \"react\";\nimport { SaveOutlined, ReloadOutlined } from \"@ant-design/icons\";\n\nconst mockData = {\n  userlistName: \"Students\",\n  users: [\n    {\n      age: 25,\n      name: \"John\"\n    },\n    {\n      age: 23,\n      name: \"Marry\"\n    },\n    {\n      age: 42,\n      name: \"Kyle\"\n    }\n  ]\n};\n\nexport const EditableTableForm = () => {\n  const [data, setData] = useState(mockData);\n  const [form] = useForm();\n\n  const onFinish = (values: any) => {\n    notification.success({\n      message: \"Submit\",\n      description: `Received values of form: ${JSON.stringify(values)}`\n    });\n    setData(values);\n  };\n\n  const onReset = () => {\n    form.resetFields();\n    notification.info({\n      message: \"Reset\",\n      description: \"Fields reset to original values.\"\n    });\n  };\n\n  return (\n    <Form\n      form={form}\n      name=\"dynamic_form_item\"\n      onFinish={onFinish}\n      initialValues={data}\n    >\n      <Form.Item name={[\"userlistName\"]} label={\"User List Name\"}>\n        <Input placeholder=\"Please enter a name\" style={{ width: \"30%\" }} />\n      </Form.Item>\n      <Form.List name=\"users\">\n        {(users, { add, remove }) => (\n          <EditableUsersTable\n            form={form}\n            users={users}\n            add={add}\n            remove={remove}\n          />\n        )}\n      </Form.List>\n      <br />\n      <Row>\n        <Form.Item>\n          <Button type=\"default\" onClick={onReset} icon={<ReloadOutlined />}>\n            Reset\n          </Button>\n        </Form.Item>\n        <Form.Item>\n          <Button\n            type=\"primary\"\n            htmlType=\"submit\"\n            icon={<SaveOutlined />}\n            style={{ marginLeft: 8 }}\n          >\n            Submit\n          </Button>\n        </Form.Item>\n      </Row>\n    </Form>\n  );\n};\n","import * as React from \"react\";\nimport { PageHeader, Button, Divider } from \"antd\";\nimport { EditableTableForm } from \"./EditableTableForm\";\nimport { GithubOutlined } from \"@ant-design/icons\";\nimport GitHubButton from \"react-github-btn\";\n\nexport const App = () => {\n  return (\n    <div className=\"App\">\n      <PageHeader\n        title=\"Ant Design Table Form Example\"\n        extra={[\n          <GitHubButton\n            href=\"https://github.com/gges5110/ant-design-table-form\"\n            data-size=\"large\"\n            data-show-count={true}\n            aria-label=\"Star gges5110/ant-design-table-form on GitHub\"\n          >\n            Star\n          </GitHubButton>,\n          <Button\n            type=\"primary\"\n            icon={<GithubOutlined />}\n            href={\"https://github.com/gges5110/ant-design-table-form\"}\n            style={{ paddingTop: 0 }}\n          >\n            Project Source\n          </Button>\n        ]}\n      >\n        <Divider style={{ marginTop: 0 }} />\n        <EditableTableForm />\n      </PageHeader>\n    </div>\n  );\n};\n","import * as React from \"react\";\nimport \"antd/dist/antd.css\";\nimport \"./index.css\";\nimport { render } from \"react-dom\";\n\nimport { App } from \"./App\";\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}